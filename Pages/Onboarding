import React, { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Badge } from "@/components/ui/badge";
import { 
  Upload, 
  MapPin, 
  FileText, 
  Camera, 
  CheckCircle,
  Clock,
  AlertCircle,
  Waves,
  TreePine,
  Fish
} from "lucide-react";

const projectTypes = [
  { id: 'mangrove', name: 'Mangrove Restoration', icon: TreePine, color: 'emerald' },
  { id: 'coral', name: 'Coral Conservation', icon: Waves, color: 'blue' },
  { id: 'seagrass', name: 'Seagrass Restoration', icon: Fish, color: 'teal' },
];

const sampleProjects = [
  {
    id: 1,
    name: "Sundarbans Mangrove Restoration",
    location: "West Bengal",
    area: "250 hectares",
    status: "verified",
    credits: 1200,
    documents: ["Environmental Impact Assessment", "Community Consent", "Satellite Imagery"]
  },
  {
    id: 2,
    name: "Coral Reef Protection - Lakshadweep",
    location: "Lakshadweep Islands",
    area: "180 hectares",
    status: "pending",
    credits: 850,
    documents: ["Marine Survey Report", "Biodiversity Assessment", "GPS Coordinates"]
  },
  {
    id: 3,
    name: "Chilika Lake Conservation",
    location: "Odisha",
    area: "320 hectares",
    status: "in-progress",
    credits: 1450,
    documents: ["Water Quality Report", "Species Inventory", "Restoration Plan"]
  },
];

export default function Onboarding() {
  const [selectedType, setSelectedType] = useState('mangrove');
  const [uploadedFiles, setUploadedFiles] = useState([]);

  const handleFileUpload = (type) => {
    // Simulate file upload
    const newFile = {
      id: Date.now(),
      type,
      name: `${type}-document-${Date.now()}.pdf`,
      status: 'uploaded'
    };
    setUploadedFiles([...uploadedFiles, newFile]);
  };

  return (
    <div className="p-6 space-y-8">
      {/* Header */}
      <div className="bg-gradient-to-r from-blue-500 to-teal-600 rounded-2xl p-8 text-white">
        <h1 className="text-3xl font-bold mb-4">Project Onboarding</h1>
        <p className="text-blue-100 text-lg">
          Register your coastal restoration project and start generating verified carbon credits
        </p>
      </div>

      <div className="grid lg:grid-cols-3 gap-6">
        {/* Project Registration Form */}
        <div className="lg:col-span-2 space-y-6">
          <Card className="shadow-lg">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <MapPin className="w-5 h-5 text-blue-500" />
                Project Details
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">Project Type</label>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-3">
                  {projectTypes.map((type) => (
                    <button
                      key={type.id}
                      onClick={() => setSelectedType(type.id)}
                      className={`p-4 rounded-lg border-2 transition-all ${
                        selectedType === type.id
                          ? `border-${type.color}-500 bg-${type.color}-50`
                          : 'border-gray-200 hover:border-gray-300'
                      }`}
                    >
                      <type.icon className={`w-6 h-6 mx-auto mb-2 text-${type.color}-500`} />
                      <div className="text-sm font-medium text-gray-900">{type.name}</div>
                    </button>
                  ))}
                </div>
              </div>

              <div className="grid md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Project Name</label>
                  <Input placeholder="Enter project name" />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Location</label>
                  <Input placeholder="State, District" />
                </div>
              </div>

              <div className="grid md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Area (hectares)</label>
                  <Input type="number" placeholder="Enter area" />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">GPS Coordinates</label>
                  <Input placeholder="Lat, Long" />
                </div>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">Project Description</label>
                <Textarea 
                  placeholder="Describe your restoration project, methodology, and expected environmental impact"
                  rows={4}
                />
              </div>
            </CardContent>
          </Card>

          {/* Document Upload */}
          <Card className="shadow-lg">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Upload className="w-5 h-5 text-emerald-500" />
                Required Documents
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid md:grid-cols-2 gap-4 mb-6">
                <div className="p-4 border-2 border-dashed border-gray-300 rounded-lg hover:border-emerald-400 transition-colors cursor-pointer"
                     onClick={() => handleFileUpload('environmental')}>
                  <FileText className="w-8 h-8 text-gray-400 mx-auto mb-2" />
                  <div className="text-center">
                    <p className="text-sm font-medium text-gray-900">Environmental Impact Assessment</p>
                    <p className="text-xs text-gray-500">Click to upload PDF</p>
                  </div>
                </div>

                <div className="p-4 border-2 border-dashed border-gray-300 rounded-lg hover:border-emerald-400 transition-colors cursor-pointer"
                     onClick={() => handleFileUpload('community')}>
                  <FileText className="w-8 h-8 text-gray-400 mx-auto mb-2" />
                  <div className="text-center">
                    <p className="text-sm font-medium text-gray-900">Community Consent Letter</p>
                    <p className="text-xs text-gray-500">Click to upload PDF</p>
                  </div>
                </div>

                <div className="p-4 border-2 border-dashed border-gray-300 rounded-lg hover:border-emerald-400 transition-colors cursor-pointer"
                     onClick={() => handleFileUpload('satellite')}>
                  <Camera className="w-8 h-8 text-gray-400 mx-auto mb-2" />
                  <div className="text-center">
                    <p className="text-sm font-medium text-gray-900">Satellite/Aerial Images</p>
                    <p className="text-xs text-gray-500">Click to upload images</p>
                  </div>
                </div>

                <div className="p-4 border-2 border-dashed border-gray-300 rounded-lg hover:border-emerald-400 transition-colors cursor-pointer"
                     onClick={() => handleFileUpload('survey')}>
                  <FileText className="w-8 h-8 text-gray-400 mx-auto mb-2" />
                  <div className="text-center">
                    <p className="text-sm font-medium text-gray-900">Baseline Survey Report</p>
                    <p className="text-xs text-gray-500">Click to upload PDF</p>
                  </div>
                </div>
              </div>

              {uploadedFiles.length > 0 && (
                <div>
                  <h4 className="font-medium text-gray-900 mb-3">Uploaded Files</h4>
                  <div className="space-y-2">
                    {uploadedFiles.map((file) => (
                      <div key={file.id} className="flex items-center justify-between p-3 bg-emerald-50 rounded-lg">
                        <div className="flex items-center gap-3">
                          <CheckCircle className="w-5 h-5 text-emerald-500" />
                          <span className="text-sm font-medium text-gray-900">{file.name}</span>
                        </div>
                        <Badge className="bg-emerald-100 text-emerald-800">Uploaded</Badge>
                      </div>
                    ))}
                  </div>
                </div>
              )}

              <Button className="w-full mt-6 bg-emerald-600 hover:bg-emerald-700">
                Submit Project for Review
              </Button>
            </CardContent>
          </Card>
        </div>

        {/* Existing Projects */}
        <div>
          <Card className="shadow-lg">
            <CardHeader>
              <CardTitle>Registered Projects</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              {sampleProjects.map((project) => (
                <div key={project.id} className="p-4 border rounded-lg hover:shadow-md transition-shadow">
                  <div className="flex items-start justify-between mb-2">
                    <h4 className="font-semibold text-gray-900 text-sm">{project.name}</h4>
                    <Badge 
                      className={
                        project.status === 'verified' 
                          ? 'bg-green-100 text-green-800'
                          : project.status === 'pending'
                          ? 'bg-yellow-100 text-yellow-800'
                          : 'bg-blue-100 text-blue-800'
                      }
                    >
                      {project.status === 'verified' && <CheckCircle className="w-3 h-3 mr-1" />}
                      {project.status === 'pending' && <Clock className="w-3 h-3 mr-1" />}
                      {project.status === 'in-progress' && <AlertCircle className="w-3 h-3 mr-1" />}
                      {project.status}
                    </Badge>
                  </div>
                  <div className="space-y-1 text-xs text-gray-600">
                    <div>📍 {project.location}</div>
                    <div>📏 {project.area}</div>
                    <div>🌱 {project.credits} credits generated</div>
                  </div>
                  <div className="mt-3">
                    <p className="text-xs text-gray-500 mb-2">Documents:</p>
                    <div className="flex flex-wrap gap-1">
                      {project.documents.map((doc, index) => (
                        <Badge key={index} variant="outline" className="text-xs">
                          {doc}
                        </Badge>
                      ))}
                    </div>
                  </div>
                </div>
              ))}
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}