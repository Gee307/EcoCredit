import React, { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { 
  TrendingUp, 
  DollarSign, 
  ShoppingCart, 
  Users,
  ArrowUpRight,
  ArrowDownRight,
  Calendar,
  MapPin,
  Leaf
} from "lucide-react";

const marketData = [
  { id: 1, seller: "Coastal Guardians", project: "Sundarbans Mangrove", location: "West Bengal", credits: 500, price: 25.50, type: "mangrove", rating: 4.8 },
  { id: 2, seller: "Marine Protectors", project: "Coral Reef Protection", location: "Tamil Nadu", credits: 300, price: 28.75, type: "coral", rating: 4.9 },
  { id: 3, seller: "Ocean Keepers", project: "Seagrass Restoration", location: "Kerala", credits: 750, price: 24.00, type: "seagrass", rating: 4.7 },
  { id: 4, seller: "Blue Economy Co", project: "Coastal Reforestation", location: "Gujarat", credits: 1000, price: 26.25, type: "mangrove", rating: 4.8 },
  { id: 5, seller: "EcoMarine Ltd", project: "Lagoon Conservation", location: "Odisha", credits: 400, price: 27.50, type: "coral", rating: 4.6 },
];

const tradeHistory = [
  { id: 1, date: "2024-01-15", type: "buy", credits: 250, price: 25.00, total: 6250, status: "completed" },
  { id: 2, date: "2024-01-12", type: "sell", credits: 500, price: 26.50, total: 13250, status: "completed" },
  { id: 3, date: "2024-01-10", type: "buy", credits: 300, price: 24.75, total: 7425, status: "completed" },
  { id: 4, date: "2024-01-08", type: "sell", credits: 150, price: 27.00, total: 4050, status: "pending" },
];

const portfolioStats = {
  totalCredits: 2450,
  totalValue: 63875,
  averagePrice: 26.07,
  monthlyChange: 15.3
};

export default function Trading() {
  const [selectedTab, setSelectedTab] = useState("marketplace");
  const [buyAmount, setBuyAmount] = useState("");

  const getTypeColor = (type) => {
    switch(type) {
      case 'mangrove': return 'bg-emerald-100 text-emerald-800';
      case 'coral': return 'bg-blue-100 text-blue-800';
      case 'seagrass': return 'bg-teal-100 text-teal-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  return (
    <div className="p-6 space-y-8">
      {/* Header */}
      <div className="bg-gradient-to-r from-green-500 to-emerald-600 rounded-2xl p-8 text-white">
        <h1 className="text-3xl font-bold mb-4">Carbon Credits Trading Platform</h1>
        <p className="text-green-100 text-lg">
          Buy and sell verified coastal restoration carbon credits from projects across India
        </p>
        
        <div className="grid md:grid-cols-4 gap-6 mt-6">
          <div className="bg-white/10 rounded-lg p-4 backdrop-blur-sm">
            <div className="flex items-center gap-2 mb-2">
              <Leaf className="w-4 h-4" />
              <span className="text-sm font-medium">Market Cap</span>
            </div>
            <div className="text-2xl font-bold">₹12.4M</div>
          </div>
          <div className="bg-white/10 rounded-lg p-4 backdrop-blur-sm">
            <div className="flex items-center gap-2 mb-2">
              <TrendingUp className="w-4 h-4" />
              <span className="text-sm font-medium">Avg Price</span>
            </div>
            <div className="text-2xl font-bold">₹26.07</div>
          </div>
          <div className="bg-white/10 rounded-lg p-4 backdrop-blur-sm">
            <div className="flex items-center gap-2 mb-2">
              <Users className="w-4 h-4" />
              <span className="text-sm font-medium">Active Traders</span>
            </div>
            <div className="text-2xl font-bold">1,248</div>
          </div>
          <div className="bg-white/10 rounded-lg p-4 backdrop-blur-sm">
            <div className="flex items-center gap-2 mb-2">
              <ShoppingCart className="w-4 h-4" />
              <span className="text-sm font-medium">24h Volume</span>
            </div>
            <div className="text-2xl font-bold">2,450</div>
          </div>
        </div>
      </div>

      <Tabs value={selectedTab} onValueChange={setSelectedTab}>
        <TabsList className="grid w-full grid-cols-3">
          <TabsTrigger value="marketplace">Marketplace</TabsTrigger>
          <TabsTrigger value="portfolio">My Portfolio</TabsTrigger>
          <TabsTrigger value="history">Trade History</TabsTrigger>
        </TabsList>

        <TabsContent value="marketplace" className="space-y-6">
          <Card className="shadow-lg">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <ShoppingCart className="w-5 h-5 text-green-500" />
                Available Carbon Credits
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {marketData.map((listing) => (
                  <div key={listing.id} className="p-4 border rounded-lg hover:shadow-md transition-shadow">
                    <div className="flex items-start justify-between mb-3">
                      <div>
                        <h4 className="font-semibold text-gray-900">{listing.project}</h4>
                        <div className="flex items-center gap-4 text-sm text-gray-600 mt-1">
                          <span className="flex items-center gap-1">
                            <Users className="w-4 h-4" />
                            {listing.seller}
                          </span>
                          <span className="flex items-center gap-1">
                            <MapPin className="w-4 h-4" />
                            {listing.location}
                          </span>
                        </div>
                      </div>
                      <Badge className={getTypeColor(listing.type)}>
                        {listing.type}
                      </Badge>
                    </div>

                    <div className="grid md:grid-cols-4 gap-4 mb-4">
                      <div>
                        <span className="text-xs text-gray-500">Available Credits</span>
                        <div className="font-semibold">{listing.credits} tons</div>
                      </div>
                      <div>
                        <span className="text-xs text-gray-500">Price per Credit</span>
                        <div className="font-semibold">₹{listing.price}</div>
                      </div>
                      <div>
                        <span className="text-xs text-gray-500">Total Value</span>
                        <div className="font-semibold">₹{(listing.credits * listing.price).toLocaleString()}</div>
                      </div>
                      <div>
                        <span className="text-xs text-gray-500">Rating</span>
                        <div className="font-semibold">⭐ {listing.rating}</div>
                      </div>
                    </div>

                    <div className="flex items-center gap-3">
                      <Input 
                        placeholder="Amount to buy"
                        type="number"
                        className="w-32"
                      />
                      <Button className="bg-green-600 hover:bg-green-700">
                        Buy Credits
                      </Button>
                      <Button variant="outline">
                        View Details
                      </Button>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="portfolio" className="space-y-6">
          <div className="grid md:grid-cols-4 gap-6">
            <Card className="shadow-lg">
              <CardHeader className="pb-3">
                <div className="flex items-center justify-between">
                  <CardTitle className="text-sm font-medium text-gray-600">Total Credits</CardTitle>
                  <Leaf className="w-4 h-4 text-emerald-500" />
                </div>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold text-gray-900">{portfolioStats.totalCredits}</div>
                <div className="flex items-center text-sm text-emerald-600 mt-1">
                  <ArrowUpRight className="w-4 h-4 mr-1" />
                  <span>+{portfolioStats.monthlyChange}% this month</span>
                </div>
              </CardContent>
            </Card>

            <Card className="shadow-lg">
              <CardHeader className="pb-3">
                <div className="flex items-center justify-between">
                  <CardTitle className="text-sm font-medium text-gray-600">Portfolio Value</CardTitle>
                  <DollarSign className="w-4 h-4 text-green-500" />
                </div>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold text-gray-900">₹{portfolioStats.totalValue.toLocaleString()}</div>
                <div className="flex items-center text-sm text-green-600 mt-1">
                  <ArrowUpRight className="w-4 h-4 mr-1" />
                  <span>+12.8% this month</span>
                </div>
              </CardContent>
            </Card>

            <Card className="shadow-lg">
              <CardHeader className="pb-3">
                <div className="flex items-center justify-between">
                  <CardTitle className="text-sm font-medium text-gray-600">Average Price</CardTitle>
                  <TrendingUp className="w-4 h-4 text-blue-500" />
                </div>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold text-gray-900">₹{portfolioStats.averagePrice}</div>
                <div className="flex items-center text-sm text-blue-600 mt-1">
                  <ArrowUpRight className="w-4 h-4 mr-1" />
                  <span>+3.2% vs market</span>
                </div>
              </CardContent>
            </Card>

            <Card className="shadow-lg">
              <CardHeader className="pb-3">
                <div className="flex items-center justify-between">
                  <CardTitle className="text-sm font-medium text-gray-600">Active Orders</CardTitle>
                  <Calendar className="w-4 h-4 text-purple-500" />
                </div>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold text-gray-900">8</div>
                <div className="flex items-center text-sm text-purple-600 mt-1">
                  <span>3 buy, 5 sell orders</span>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="history" className="space-y-6">
          <Card className="shadow-lg">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Calendar className="w-5 h-5 text-blue-500" />
                Recent Transactions
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="overflow-x-auto">
                <table className="w-full">
                  <thead>
                    <tr className="border-b border-gray-200">
                      <th className="text-left py-3 px-4 font-semibold text-gray-700">Date</th>
                      <th className="text-left py-3 px-4 font-semibold text-gray-700">Type</th>
                      <th className="text-left py-3 px-4 font-semibold text-gray-700">Credits</th>
                      <th className="text-left py-3 px-4 font-semibold text-gray-700">Price</th>
                      <th className="text-left py-3 px-4 font-semibold text-gray-700">Total</th>
                      <th className="text-left py-3 px-4 font-semibold text-gray-700">Status</th>
                    </tr>
                  </thead>
                  <tbody>
                    {tradeHistory.map((trade) => (
                      <tr key={trade.id} className="border-b border-gray-100 hover:bg-gray-50">
                        <td className="py-3 px-4 text-gray-900">{trade.date}</td>
                        <td className="py-3 px-4">
                          <Badge className={trade.type === 'buy' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}>
                            {trade.type === 'buy' ? (
                              <ArrowDownRight className="w-3 h-3 mr-1" />
                            ) : (
                              <ArrowUpRight className="w-3 h-3 mr-1" />
                            )}
                            {trade.type}
                          </Badge>
                        </td>
                        <td className="py-3 px-4 text-gray-900">{trade.credits}</td>
                        <td className="py-3 px-4 text-gray-900">₹{trade.price}</td>
                        <td className="py-3 px-4 font-medium text-gray-900">₹{trade.total.toLocaleString()}</td>
                        <td className="py-3 px-4">
                          <Badge 
                            variant={trade.status === 'completed' ? 'default' : 'secondary'}
                            className={trade.status === 'completed' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}
                          >
                            {trade.status}
                          </Badge>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
}